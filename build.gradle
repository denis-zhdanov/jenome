buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

plugins {
    id "tech.harmonysoft.oss.traute" version "1.0.3"
    id "com.jfrog.bintray" version '1.7.3'
}

apply plugin: 'java'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'maven'
apply plugin: 'maven-publish'
if (!System.getenv('CI_ENV')) {
    apply plugin: 'signing'
}

group 'tech.harmonysoft'
version '1.0.1'
archivesBaseName = 'jenome'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

ext {
    junitJupiterVersion = '5.0.1'
    junitPlatformVersion = '1.0.1'
}

traute {
    javacPluginVersion = '1.0.6'
    logFile = "$buildDir/traute.log"
    verbose = true
}

dependencies {
    compile 'org.jetbrains:annotations:15.0'

    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"

    testCompile 'org.mockito:mockito-core:2.12.0'
    testCompile "org.junit.platform:junit-platform-runner:$junitPlatformVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"

    testCompileOnly 'org.apiguardian:apiguardian-api:1.0.0'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

if (!System.getenv('CI_ENV')) {
    signing {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (!System.getenv('CI_ENV')) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                packaging 'jar'

                name 'Jenome'
                description 'A Java Generics Utility Library'
                url 'http://jenome.oss.harmonysoft.tech/'

                scm {
                    connection 'scm:git:git://github.com/denis-zhdanov/jenome.git'
                    developerConnection 'scm:git:git://github.com/denis-zhdanov/jenome.git'
                    url 'https://github.com/denis-zhdanov/jenome'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'denis'
                        name 'Denis Zhdanov'
                        email 'denzhdanov@gmail.com'
                    }
                }
            }
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'tech.harmonysoft'
            artifactId archivesBaseName
            version version
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = ['MyPublication']

    pkg {

        repo = 'harmonysoft.tech'
        name = archivesBaseName
        licenses = ['MIT']
        vcsUrl = 'https://github.com/denis-zhdanov/jenome.git'

        version {
            name = version
            released  = new Date()
        }
    }
}
